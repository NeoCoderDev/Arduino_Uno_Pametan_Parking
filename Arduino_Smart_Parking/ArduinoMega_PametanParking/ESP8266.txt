#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char* ssid = "Pejak Property 2.4G"; // Zamenite sa vašim SSID-om
const char* password = "pejakmbnd"; // Zamenite sa vašom lozinkom

ESP8266WebServer server(80);  // Kreiranje web servera na portu 80

void setup() {
  Serial.begin(115200);  // Komunikacija sa Arduino Mega
  WiFi.begin(ssid, password); // Povezivanje na WiFi

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Definisanje ruta za rezervaciju različitih mesta
  server.on("/reserve1", handleReserve1); // Rezervacija mesta 1
  server.on("/reserve2", handleReserve2); // Rezervacija mesta 2
  server.on("/reserve3", handleReserve3); // Rezervacija mesta 3

  server.begin();
  Serial.println("HTTP server started");
}

// Funkcije za rukovanje rezervacijama
void handleReserve1() {
  Serial.println("Parking mesto 1 je rezervisano");  // Šalje komandu za mesto 1 Arduino Megi
  server.send(200, "text/plain", "Reservation for Parking Spot 1 sent to Arduino Mega!");
}

void handleReserve2() {
  Serial.println("Parking mesto 2 je rezervisano");  // Šalje komandu za mesto 2 Arduino Megi
  server.send(200, "text/plain", "Reservation for Parking Spot 2 sent to Arduino Mega!");
}

void handleReserve3() {
  Serial.println("Parking mesto 3 je rezervisano");  // Šalje komandu za mesto 3 Arduino Megi
  server.send(200, "text/plain", "Reservation for Parking Spot 3 sent to Arduino Mega!");
}

void loop() {
  server.handleClient();  // Obrada dolaznih HTTP zahteva
}
